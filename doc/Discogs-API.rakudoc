=begin pod

=head1 NAME

Discogs::API - Provide basic API to Discogs

=head1 SYNOPSIS

=begin code :lang<raku>

use Discogs::API;
my $discogs = Discogs.new;

my $release = $discogs.release(249504);

=end code

=head1 DESCRIPTION

Discogs::API provides a Raku library with access to the
L<Discogs|https://discogs.com> data and functions.  It tries to follow
the API as closely as possible, so the up-to-date
L<Discogs developer information|https://www.discogs.com/developers>
can be used to look up matters that are unclear from thie documentation
in this module.

One exception to this rule is that fieldnames in the JSON generated by
Discogs that are using snake_case, are converted to use kebab-case in
the Raku interface.  So a field called C<allows_multiple_values> in
the JSON blob, will be accessible using a C<allow-multiple-values>
method in this module.

=head1 UTILITY METHODS

=head2 new

=begin code :lang<raku>

my $discogs = Discogs.new(
  client   => $client,     # Cro::HTTP::Client compatible, optional
  token    => "xfhgh1624", # Discogs access token, default: none
  key      => "kahgjkhdg", # Discogs access key, default: none
  secret   => "454215642", # Discogs access secret, default: none
  currency => "EUR",       # default: "USD"
  per-page => 10,          # default: 50
;

=end code

Create an object to access the services that the Discogs API has to offer.

=item client - a Cro::HTTP::Client compatible client

One will be provided if not specified.

=item token - Discogs Access Token

A token needed to access certain parts of the Discogs API.  See
L<https://www.discogs.com/settings/developers> for more information.
Defaults to whatever is specified with the DISCOGS_TOKEN environment
variable.

=item key - Discogs Access Key

A string needed to access certain parts of the Discogs API.  See
L<https://www.discogs.com/developers#page:authentication> for more
information.

=item secret - Discogs Access Secret

A string needed to access certain parts of the Discogs API.  See
L<https://www.discogs.com/developers#page:authentication> for more
information.

=item currency

A string indicating the default currency to be used when producing
prices of releases in the Discogs Marketplace.  It should be one of
the following strings:

  USD GBP EUR CAD AUD JPY CHF MXN BRL NZD SEK ZAR

=item per-page

An integer indicating the default number of items per page that should
be produced by methods that return objects that support pagination.

=head2 client

=begin code :lang<raku>

my $default = Discogs::API.client;  # the default client

my $client = $discogs.client;       # the actual client to be used

=end code

Return the default C<Cro::HTTP::Client> object when called as a class
method.  That object will be used by default when creating a C<Discogs::API>
object.  Intended to be used as a base for alterations, e.g. by
overriding the C<GET> method during testing.

Returns the actual object that was (implicitely) specified during the
creation of the C<Discogs::API> object when called as an instance method.

=head2 GET

=begin code :lang<raku>

my $content = $discogs.GET("/artists/108713", Discogs::API::Artist);

=end code

Helper method to fetch data using the Discogs API for the given URI,
and interpret it as data of the given class.  Returns an instance of
the given class, or throws if something went wrong.

=head2 test-with

=begin code :lang<raku>

my $discogs = Discogs::API.new.test-with($path);

=end code

Provide an alternate L<Discogs::API> object that can be used for testing.
Instead of fetching the data from Discogs, it will look at the indicated
path and map the URI to a file with the same name.  So an URI like
C<"/artist/108713"> and a path C<"foo/bar".IO> will look for a file called
C<"foo/bar/artist/108713.json">, slurp that, and create the requested object
out of that.

=head1 CONTENT METHODS

=head2 artist

=begin code :lang<raku>

my $artist = $discogs.artist(108713);

=end code

Fetch the information for the given artist ID and return that in
an L<Discogs::API::Artist> object.

=head2 artist-releases

=begin code :lang<raku>

my $artist-releases = $discogs.artist-releases(
  108713,         # the artist ID
  page     => 2,  # page number, default: 1
  per-page => 25, # items per page, default: object

  sort => "year", # sort on given key, default no sort
  sort-order => "desc", # sort order, default to "asc"
);

=end code

Fetch all of the releases of given artist ID and return them in
pages in a L<Discogs::API::ArtistReleases> object.

=item page

An integer indicating the page to obtain the C<ArtistRelease>
objects of.  Defaults to 1.

=item per-page

An integer indicating the maximum number of items per page to be
produced.  Defaults to what was (implicitely) specified with the
creation of the C<Discogs::API> object.

=item sort

A string indicating how the C<ArtistRelease> objects to be returned.
Defaults to no sorting.  The following fields can be specified:

  year title format

=item sort-order

A string indicating the sort order of any sort action to be performed
on the C<ArtistRelease> objects to be returned.  Defaults to "asc".
The following fields can be specified:

  asc desc

=head2 community-release-rating

=begin code :lang<raku>

my $rating = $discogs.community-release-rating(249504);

my $rating = $discogs.community-release-rating($release);

=end code

Fetch the information about the Discogs community rating for a
given release and return that as an
L<Discogs::API::CommunityReleaseRating> object.

The release parameter can either be given as an unsigned integer,
or as an L<Discogs::API::Release> object.

=head2 label

=begin code :lang<raku>

my $label = $discogs.label(1);

=end code

Fetch the information for the given label ID and return that in
an L<Discogs::API::Label> object.

=head2 label-releases

=begin code :lang<raku>

my $label-releases = $discogs.label-releases(
  1,              # the label ID
  page     => 2,  # page number, default: 1
  per-page => 25, # items per page, default: object
);

=end code

Fetch all of the releases of given label ID and return them in
pages in a L<Discogs::API::LabelReleases> object.

=head2 master-release

=begin code :lang<raku>

my $master-release = $discogs.master-release(1000);

=end code

Fetch the information for the given master release ID and return
that in an L<Discogs::API::MasterRelease> object.

=head2 master-release-versions

=begin code :lang<raku>

my $master-release-versions = $discogs.master-release-versions(
  1000,                 # the master release ID
  page     => 2,        # page number, default: 1
  per-page => 25,       # items per page, default: object

  format => "CD",       # limit to format, default no limit
  label  => "Foo",      # limit to label, default no limit
  released => 1992,     # limit to year, default no limit
  country => "Belgium", # limit to country, default no limit
  sort => "released",   # sort on given key, default no sort
  sort-order => "desc", # sort order, default to "asc"
);

=end code

Fetch all of the versions of a given master release ID and return
them in pages in a L<Discogs::API::MasterReleaseVersions> object.  It
supports the following optional named parameters:

=item page

An integer indicating the page to obtain the C<MasterReleaseVersion>
objects of.  Defaults to 1.

=item per-page

An integer indicating the maximum number of items per page to be
produced.  Defaults to what was (implicitely) specified with the
creation of the C<Discogs::API> object.

=item format

A string indicating the C<format> of the C<MasterReleaseVersion> objects
to be returned.  Defaults to no limitation on format.

=item label

A string indicating the C<label> of the C<MasterReleaseVersion> objects
to be returned.  Defaults to no limitation on label.

=item released

An integer indicating the year of release of the C<MasterReleaseVersion>
objects to be returned.  Defaults to no limitation on year.

=item country

A string indicating the C<country> of the C<MasterReleaseVersion> objects
to be returned.  Defaults to no limitation on country.

=item sort

A string indicating how the C<MasterReleaseVersion> objects to be returned.
Defaults to no sorting.  The following fields can be specified:

  released title format label catno country

=item sort-order

A string indicating the sort order of any sort action to be performed
on the C<MasterReleaseVersion> objects to be returned.  Defaults to "asc".
The following fields can be specified:

  asc desc

=head2 release

=begin code :lang<raku>

my $release = $discogs.release(249504, currency => "EUR");

=end code

Fetch the information for the given release ID and return that in
an L<Discogs::API::Release> object.  Optionally takes a named
C<currency> parameter that should have one of the supported
currency strings.  This defaults to the value for the currency
that was (implicitely) specified when creating the C<Discogs::API>
object.

=head2 search

Perform a general search in the Discogs database, optionally searching
specific parts.  Returns a L<Discogs::API::SearchResults> object.

=begin code :lang<raku>

my $search = $discogs.search(
  "nirvana",              # optional, general query
  page     => 2,          # page number, default: 1
  per-page => 25,         # items per page, default: object

  type => "release",      # optional search for type only
  title => "nits - urk",  # optional artist - release search query
  release-title => "urk", # optional search for to release name
  credit => "kurt",       # optional search for credits
  artist => "nirvana",    # optional search for artist name
  anv => "nirvana",       # optional search for artist name variation
  label => "Foo",         # optional search for label
  genre => "rock",        # optional search for genre
  style => "grunge",      # optional search for style
  country => "belgium",   # optional search for country
  year => 1992,           # optional search for year of release
  format => "CD",         # optional search for format
  catno => "DGCD-24425",  # optional search for catalog number
  barcode => "7 2064-24425-2 4", # optional search for barcode
  track => "smells like", # optional search for title of track
  submitter => "milKt",   # optional search for username of submitter
  contributor => "liz",   # optional search for username of contributor
);

=end code

=item page

An integer indicating the page to obtain the C<Discogs::API::SearchResult>
objects of.  Defaults to 1.

=item per-page

An integer indicating the maximum number of items per page to be
produced.  Defaults to what was (implicitely) specified with the
creation of the C<Discogs::API> object.

=item query

The string to be searched for.

=item type

A string to determine which main fields to be searched.  Should be one of:

  release master artist label

=item title

Special formatted string to search for an artist / release title combination.
The hyphen indicates the separation, so e.g. "nirvana - nevermind".

=item release-title

Search for given string as title of a release only.

=item credit

Search for given string as credit for a release only.

=item artist

Search for given string as main name of artist only.

=item anv

Search for given string as alternative name variation of artist only.

=item label

Search for given string as name of label only.

=item genre

Search for given string as name of genre only.

=item style

Search for given string as name of style only.

=item country

Search for given string as name of country only.

=item year

Search for given year of release only.

=item format

Search for given string as format only.

=item catno

Search for given string as catalog number only.

=item barcode

Search for given string as barcode only.

=item track

Search for given string as track title only.

=item submitter

Search for given string as the username of a submitter only.

=item submitter

Search for given string as the username of a contributor only.

=head2 user-release-rating

=begin code :lang<raku>

my $rating = $discogs.user-release-rating(249504, "username");

my $rating = $discogs.user-release-rating($release, "username");

my $rating = $discogs.user-release-rating(249504, $user);

my $rating = $discogs.user-release-rating($release, $user);

=end code

Fetch the information about the rating for a given release and
a username and return that as a L<Discogs::API::UserReleaseRating>
object.

The release parameter can either be given as an unsigned integer,
or as an L<Discogs::API::Release> object.  The user parameter can
either be given as a string, or as an L<Discogs::API::User> object.

=head1 ADDITIONAL CLASSES

In alphatical order:

=head2 Discogs::API::Artist

=item data-quality

String indicating the quality of the data.

=item id

The artist ID.

=item images

A list of L<Discogs::API::Image> objects for this artist.

=item members

A list of L<Discogs::API::Member> objects of this artist.

=item name

String with the main name of the artist.

=item namevariations

A list of strings with alternate names / spellings of the artist.

=item profile

A string with a profile of the artist.

=item releases-url

The URL to fetch all of the releases of this Artist using the Discogs API.

=item resource-url

The URL to fetch this object using the Discogs API.

=item uri

The URL to access information about this artist on the Discogs website.

=item urls

A list of URLs associated with this artist.

=head2 Discogs::API::ArtistReleases

This object is usually created as part of a L<Discogs::API::ArtistReleases>
object.

=item artist

A string with the name of the artist of this release.

=item community-in-collection

An unsigned integer indicating the number of people in the Discogs
community that have this release.

=item community-in-wantlist

An integer indicating the number of people in the Discogs
community that want to have this release.

=item format

A string indicating the format of this release.

=item id

The ID of this release.

=item label

The ID of the associated C<Discogs::API::Label> object.

=item resource-url

The URL to obtain the information about this release using the Discogs API.

=item role

A string indicating the role of this release compared to its
L<Discogs::API::MasterRelease> object.

=item stats

An L<Discogs::API::Stats> object with user and community statistics.  It is
probably easier to use the short-cut methods C<community-in-collection>,
C<community-in-wantlist>, C<user-in-collection>, C<user-in-wantlist>.

=item status

A string indicating the status of the information about this release.

=item thumb

A URL for a thumbnail image associated with this release.

=item title

A string with the title of this release.

=item type

A string indicating the type of release, e.g. "master".

=item user-in-collection

A boolean indicating whether the current user has this release.

=item user-in-wantlist

A boolean indicating whether the current user wants to have this release.

=item year

An unsigned integer for the year this release was released.

=head2 Discogs::API::ArtistReleases

Retrieves a list of all L<Discogs::API::ArtistRelease> objects that were
made by the given artist ID, and pagination settings.

=item first-page

Returns the first page of the information of this object, or C<Nil> if
already on the first page.

=item first-page-url

The URL to fetch the data of the B<first> page of this object using the
Discogs API.  Returns C<Nil> if the there is only one page of information
available.

=item items

An integer indicating the total number of L<Discogs::API::LabelRelease>
objects there are available for this artist.

=item last-page

Returns the last page of the information of this object, or C<Nil> if
already on the last page.

=item last-page-url

The URL to fetch the data of the B<last> page of this object using the
Discogs API.  Returns C<Nil> if already on the last page.

=item next-page

Returns the next page of the information of this object, or C<Nil> if
already on the last page.

=item next-page-url

The URL to fetch the data of the B<next> page of this object using the
Discogs API.  Returns C<Nil> if already on the last page.

=item page

An integer indicating the page number of this object.

=item pages

An integer indicating the number of pages of information available for
this object.

=item pagination

The L<Discogs::API::Pagination> object associted with this object.
Usually not needed, as its information is available in shortcut methods.

=item per-page

An integer representing the maximum number of items on a page.

=item previous-page

Returns the previous page of the information of this object, or C<Nil> if
already on the first page.

=item previous-page-url

The URL to fetch the data of the B<previous> page of this object using the
Discogs API.  Returns C<Nil> if already on the first page.

=item releases

A list of L<Discogs::API::ArtistRelease> objects.

=head2 Discogs::API::ArtistSummary

=item anv

A string with the artist name variation.

=item id

The artist ID.

=item join

A string indicating joining.

=item name

A string with the name.

=item resource-url

The URL to fetch the full artist information using the Discogs API.

=item role

A string indicating the role of this artist.

=item tracks

A string indicating the tracks on which the artist participated.

=head2 Discogs::API::CatalogEntry

An object that describes entities in the Discogs database that are also
referred to as C<Label>s.  Usually created indirectly by other objects.

=item catno

A string with the identifying catalog number.

=item entity-type

An unsigned integer with a description of the type of this entity.

=item entity-type-name

A string with the name of this entity.

=item id

The numeric ID of this catalog entry.

=item name

The name of this catalog entry.

=item resource-url

The URL to fetch the full information of this catalog entry using
the Discogs API.

=head2 Discogs::API::Community

Usually obtained indirectly from the C<community> method on the
L<Discogs::API::Release> object.  These methods can also be called
directly on the L<Discogs::API::Release> object, as these are also
provided as shortcuts.

=item contributors

A list of L<Discogs::API::User> objects of contributors to the
community information of this release.

=item data-quality

A string describing the quality of the data of this release.

=item have

An integer indicating how many community members have this release.

=item rating

A rational number indicating the rating the members of the community
have given this release.

=item status

The status of the information about this release in the community.

=item submitter

The L<Discogs::API::User> object for the submitter of this release.

=item want

An integer indicating how many community members want to have this release.

=head2 Discogs::API::CommunityReleaseRating

The rating of the Discogs community for a specific release.

=item rating

A rational number indicating the rating.

=item release-id

An unsigned integer for the ID of the release.

=head2 Discogs::API::FilterFacet

An object usually created as part of the L<Discogs::API::MasterReleaseVersions>
object.

=item allows-multiple-values

A Bool indicating whether more than one value is allowed in C<values>.

=item id

The ID.

=item title

The title.

=item values

A list of one or more values.

=head2 Discogs::API::Filters

An object usually created as part of the L<Discogs::API::MasterReleaseVersions>
object.

=item applied

A hash indicating which L<Discogs::API::FilterFacet>s have been applied.

=item available

A hash of unsigned integer indicating how many entries are available.

=head2 Discogs::API::Format

An object that describes the format of a release.  Usually created by
other objects.

=item descriptions

A list of strings describing this format.

=item name

The name of this format.

=item qty

An unsigned integer indicating the number of copies that are available
in this format in the Discogs Marketplace.

=head2 Discogs::API::Identifier

A generic object created by other objects.

=item type

A string indicating the type.

=item value

A string indicating the value.

=head2 Discogs::API::Image

An object describing an image in the Discogs database.  Usually created
by other objects.

=item height

The height of the image in pixels.

=item resource-url

The URL to access this image on the Discogs image website.

=item type

String with the type for this image: either "primary" or "secondary".

=item uri

The URL to access this image on the Discogs image website.

=item uri150

The URL to access a 150x150 pixel version of the  image on the Discogs
image website.

=item width

The width of the image in pixels.

=head2 Discogs::API::Label

The C<Label> object represents a label, company, recording studio,
location, or other entity involved with L<Discogs::API::Artist>s and
L<Discogs::API::Release>s.  Labels were recently expanded in scope
to include things that aren't labels – the name is an artifact of this
history.

=item contact-info

A string with contact information for this label.

=item data-quality

A string describing the quality of the data of this label.

=item id

The ID of this label.

=item images

A list of L<Discogs::API::Image> objects for this label.

=item name

A string with the name of this label.

=item profile

A string with a profile about this label.

=item releases-url

A URL to retrieve all the L<Discogs::API::Release> objects associated
with this label using the Discogs API.

=item resource-url

The URL to obtain the information about this label using the Discogs API.

=item sublabels

A list of L<Discogs::API::SubLabel> objects describing subdivisions of this label.

=item uri

A URL to see the information of this label on the Discogs website.

=item urls

A list of URLs related to this label.

=head2 Discogs::API::LabelRelease

This object is usually created as part of a L<Discogs::API::LabelReleases>
object.

=item artist

A string with the name of the artist of this release.

=item catno

A string with the catalog number of this release.

=item format

A string with the format of this release.

=item id

An unsigned integer for the ID of this release.

=item resource-url

A URL to get the full release information of this release using the
Discogs API.

=item status

The status of the information about this release in the community.

=item thumb

A URL for a thumbnail image for this release.

=item title

A string for the title of this release.

=item year

An unsigned integer indicating the year this release was released.

=head2 Discogs::API::LabelReleases

Retrieves a list of all L<Discogs::API::LabelRelease> objects that are
versions of a given master release ID, and pagination settings.

=item first-page

Returns the first page of the information of this object, or C<Nil> if
already on the first page.

=item first-page-url

The URL to fetch the data of the B<first> page of this object using the
Discogs API.  Returns C<Nil> if the there is only one page of information
available.

=item items

An integer indicating the total number of L<Discogs::API::LabelRelease>
objects there are available for label.

=item last-page

Returns the last page of the information of this object, or C<Nil> if
already on the last page.

=item last-page-url

The URL to fetch the data of the B<last> page of this object using the
Discogs API.  Returns C<Nil> if already on the last page.

=item next-page

Returns the next page of the information of this object, or C<Nil> if
already on the last page.

=item next-page-url

The URL to fetch the data of the B<next> page of this object using the
Discogs API.  Returns C<Nil> if already on the last page.

=item page

An integer indicating the page number of this object.

=item pages

An integer indicating the number of pages of information available for
this object.

=item pagination

The L<Discogs::API::Pagination> object associted with this object.
Usually not needed, as its information is available in shortcut methods.

=item per-page

An integer representing the maximum number of items on a page.

=item previous-page

Returns the previous page of the information of this object, or C<Nil> if
already on the first page.

=item previous-page-url

The URL to fetch the data of the B<previous> page of this object using the
Discogs API.  Returns C<Nil> if already on the first page.

=item releases

A list of L<Discogs::API::LabelRelease> objects.

=head2 Discogs::API::MasterRelease

The MasterRelease object represents a set of similar
L<Discogs::API::Release>s.  Master releases have a "main release"
which is often the chronologically earliest.

=item artists

A list of L<Discogs::API::ArtistSummary> objects for this master release.

=item data-quality

A string describing the quality of the data of this master release.

=item fetch-main-release

Fetch the main L<Discogs::API::Release> of this main release
using the Discogs API.

=item fetch-most-recent-release

Fetch the most recent L<Discogs::API::Release> of this main release
using the Discogs API.

=item genres

A list of strings describing the genres of this master release.

=item id

The ID of this master release.

=item images

A list if L<Discogs::API::Image> objects associated with this master release.

=item lowest-price

The lowest price seen for any of the releases of this master release
on the Discogs Marketplace, in the currency that was (implicitely)
specified when the L<Discogs::API> object was made.

=item main-release

The ID of the L<Discogs::API::Release> object that is considered to
be the main release.

=item main-release-url

The URL to access the data of the main release using the Discogs API.

=item most-recent-release

The ID of the L<Discogs::API::Release> object that is considered to
be the most recent release.

=item most-recent-release-url

The URL to access the data of the most recent release using the
Discogs API.

=item num-for-sale

An integer indicating the number of copies of any release of this
main release, that are for sale on the Discogs Marketplace.

=item resource-url

The URL to obtain the information about this master release using
the Discogs API.

=item styles

A list of strings describing the styles of this master release.

=item title

A string with the title of this master release.

=item tracklist

A list of L<Discogs::API::Track> objects describing the tracks of this master
release.

=item uri

A URL to see the information of this master release on the Discogs
website.

=item versions-url

A URL to fetch the L<Discogs::API::MasterReleaseVersion> objects for this
master release using the Discogs API.

=item videos

A list of L<Discogs::API::Video> objects associated with this master
release.

=item year

An integer for the year in which this master release was released.

=head2 Discogs::API::MasterReleaseVersion

This object is usually created as part of the
L<Discogs::API::MasterReleaseVersions> object.

=item catno

The catalog number of the associated L<Discogs::API::CatalogEntry> object.

=item community-in-collection

An unsigned integer indicating the number of people in the Discogs
community that have this release.

=item community-in-wantlist

An unsigned integer indicating the number of people in the Discogs
community that want to have this release.

=item country

A string indicating the country of this release.

=item format

A string indicating the format of this release.

=item id

The ID of this release.

=item label

The ID of the associated C<Discogs::API::Label> object.

=item major-formats

A string indicating the major formats in which this release is available.

=item released

An unsigned integer indicating the year that this release was released.

=item resource-url

The URL to obtain the information about this release using the Discogs API.

=item stats

An L<Discogs::API::Stats> object with user and community statistics.  It is
probably easier to use the short-cut methods C<community-in-collection>,
C<community-in-wantlist>, C<user-in-collection>, C<user-in-wantlist>.

=item status

A string indicating the status of the information about this release.

=item thumb

A URL for a thumbnail image associated with this release.

=item title

A string with the title of this release.

=item user-in-collection

An unsigned integer indicating whether the current user has this release.

=item user-in-wantlist

An unsigned integer indicating whether the current user wants to have this
release.

=head2 Discogs::API::MasterReleaseVersions

Retrieves a list of all L<Discogs::API::MasterReleaseVersion> objects that are
versions of a given master release ID, and pagination settings.

=item filter-facets

A list of L<Discogs::API::FilterFacet> objects associated with this object.

=item filters

A list of L<Discogs::API::Filter> objects associated with this object.

=item first-page

Returns the first page of the information of this object, or C<Nil> if
already on the first page.

=item first-page-url

The URL to fetch the data of the B<first> page of this object using the
Discogs API.  Returns C<Nil> if the there is only one page of information
available.

=item items

An integer indicating the total number of L<Discogs::API::MasterReleaseVersion>
objects there are available for this master release.

=item last-page

Returns the last page of the information of this object, or C<Nil> if
already on the last page.

=item last-page-url

The URL to fetch the data of the B<last> page of this object using the
Discogs API.  Returns C<Nil> if already on the last page.

=item next-page

Returns the next page of the information of this object, or C<Nil> if
already on the last page.

=item next-page-url

The URL to fetch the data of the B<next> page of this object using the
Discogs API.  Returns C<Nil> if already on the last page.

=item page

An integer indicating the page number of this object.

=item pages

An integer indicating the number of pages of information available for
this object.

=item pagination

The L<Discogs::API::Pagination> object associted with this object.
Usually not needed, as its information is available in shortcut methods.

=item per-page

An integer representing the maximum number of items on a page.

=item previous-page

Returns the previous page of the information of this object, or C<Nil> if
already on the first page.

=item previous-page-url

The URL to fetch the data of the B<previous> page of this object using the
Discogs API.  Returns C<Nil> if already on the first page.

=item versions

A list of L<Discogs::API::MasterReleaseVersion> objects.

=head2 Discogs::API::Member

=item active

A Boolean indicating whether this member is still active with the
L<Discogs::API::Artist> it is associated with.

=item id

The ID of this member as a separate L<Discogs::API::Artist>.

=item name

The name of this member.

=item resource-url

The URL to fetch L<Discogs::API::Artist> object of this member using
the Discogs API.

=head2 Discogs::API::Pagination

This object is usually created as part of some kind of search result that
allows for pagination.

=item items

An integer with the number of items in this page.

=item page

An integer with the page number of the information of this page.

=item pages

An integer with the total number of pages available with the current
C<per-page> value.

=item per-page

An integer with the maximum number of items per page.

=item urls

A hash of URLs for moving between pages.  Usually accessed with
shortcut methods of the object incorporating this C<Pagination>
object.

=head2 Discogs::API::Rating

A rating, usually automatically created with a L<Discogs::API::Community>
object.

=item average

A rational value indicating the average rating of the object associated
with the associated L<Discogs::API::Community> object.

=item count

An integer value indicating the number of votes cast by community members.

=head2 Discogs::API::Release

The C<Discogs::API::Release> object represents a particular physical or
digital object released by one or more L<Discogs::API::Artist>s.

=item artists

A list of L<Discogs::API::ArtistSummary> objects for this release.

=item average

A rational value indicating the average rating of this release by
community members.

=item artists-sort

A string with the artists, sorted.

=item community

The L<Discogs::API::Community> object with all of the Discogs community
information associated with this release.

=item companies

A list of L<Discogs::API::CatalogEntry> objects of entities that had
something to do with this release.

=item contributors

A list of L<Discogs::API::User> objects of contributors to the community
information of this release.

=item count

An integer value indicating the number of votes cast by community members
about this release.

=item country

A string with the country of origin of this release.

=item data-quality

String indicating the quality of the data.

=item date-added

A C<Date> object of the date this release was added to the Discogs system.

=item date-changed

A C<Date> object of the date this release was last changed in the Discogs
system.

=item estimated-weight

An integer value to indicate the weight of this release compared to other
release in the L<Discogs::API::MasterRelease>.

=item extraartists

A list of L<Discogs::API::ArtistSummary> objects for additional artists
in this release.

=item fetch-master-release

Fetch the associated L<Discogs::API::MasterRelease> object.

=item format-quantity

An integer value for the number of formats available for this release.

=item formats

A list of L<Discogs::API::Format> objects that are available for this
release.

=item genres

A list of strings describing the genres of this release.

=item have

An integer indicating how many community members have this release.

=item id

The integer value that identifies this release.

=item identifiers

A list of L<Discogs::API::Identifier> objects for this release.

=item images

A list of L<Discogs::API::Image> objects for this release.

=item labels

A list of L<Discogs::API::CatalogEntry> objects that serve as a
"label"  for this release.

=item lowest-price

A rational value indicating the lowest price if this release is
available in the Discogs Marketplace in the currency that was
(implicitely) specified when creating the L<Discogs::API> object.

=item master-id

The integer value of the L<Discogs::API::MasterRelease> id of this
release.

=item master-url

The URL to fetch the master release of this release using the
Discogs API.

=item notes

A string with additional notes about this release.

=item num-for-sale

An integer value indicating the number of copies for sale for this release
on the Discogs Marketplace.

=item rating

A rational number indicating the rating the members of the community
have given this release.

=item released

A string with a machine readable for of the date this release was released.

=item released-formatted

A string with a human readable form of the date this release was released.

=item resource-url

The URL to fetch this L<Discogs::API::Release> object using the Discogs API.

=item series

A list of L<Discogs::API::CatalogEntry> objects of which this release is
a part of.

=item status

A string indicating the status of the information of this release.

=item styles

A list of strings indicating the styles of this release.

=item submitter

The L<Discogs::API::User> object for the submitter of this release.

=item thumb

A URL for a thumbnail image for this release.

=item title

A string with the title of this release.

=item tracklist

A list of L<Discogs::API::Track> objects of this release.

=item uri

The URL to access this release on the Discogs image website.

=item videos

A list of L<Discogs::API::Video> objects associated with this release.

=item want

An integer indicating how many community members want to have this release.

=item year

An integer value of the year this release was released.

=head2 Discogs::API::SearchResult

This object is usually created as part of a L<Discogs::API::SearchResults>
object.

=item cover_image

A URL with an image describing this search result.

=item id

An unsigned integer for the ID associated with a release.

=item master-id

An unsigned integer for the ID associated with a master release.

=item master-url

A URL to fetch the information of the associated master release using the
Discogs API.

=item resource-url

A URL to fetch the full information for this entry using the Discogs API.

=item thumb

A URL for a thumbail image for this entry.

=item title

A string with the title associated for this entry.

=item type

A string indicating the type of entry.  Can be any of:

  release master artist label

=item uri

A URI to fetch the full information for this release on the Discogs website.

=item user-data

A L<Discogs::API::StatsData> object with data.  It's probably easier to use
the C<user-in-collection> and C<user-in-wantlist> methods.

=item user-in-collection

An unsigned integer indicating whether the current user has this entry.

=item user-in-wantlist

An unsigned integer indicating whether the current user wants to have this
entry.

=head2 Discogs::API::SearchResults

Retrieves a list of L<Discogs::API::Searchresult> objects that match
the given query parameters, and pagination settings.

=item first-page

Returns the first page of the information of this object, or C<Nil> if
already on the first page.

=item first-page-url

The URL to fetch the data of the B<first> page of this object using the
Discogs API.  Returns C<Nil> if the there is only one page of information
available.

=item items

An integer indicating the total number of L<Discogs::API::SearchResult>
objects there are available.

=item last-page

Returns the last page of the information of this object, or C<Nil> if
already on the last page.

=item last-page-url

The URL to fetch the data of the B<last> page of this object using the
Discogs API.  Returns C<Nil> if already on the last page.

=item next-page

Returns the next page of the information of this object, or C<Nil> if
already on the last page.

=item next-page-url

The URL to fetch the data of the B<next> page of this object using the
Discogs API.  Returns C<Nil> if already on the last page.

=item page

An integer indicating the page number of this object.

=item pages

An integer indicating the number of pages of information available for
this object.

=item pagination

The L<Discogs::API::Pagination> object associted with this object.
Usually not needed, as its information is available in shortcut methods.

=item per-page

An integer representing the maximum number of items on a page.

=item previous-page

Returns the previous page of the information of this object, or C<Nil> if
already on the first page.

=item previous-page-url

The URL to fetch the data of the B<previous> page of this object using the
Discogs API.  Returns C<Nil> if already on the first page.

=item results

A list of L<Discogs::API::SearchResult> objects.

=head2 Discogs::API::Stats

This object is usually created as part of the
L<Discogs::API::MasterReleaseVersion> object.

=item user

The L<Discogs::API::StatsData> object with statistics of the current user.

=item user

The L<Discogs::API::StatsData> object with statistics of the Discogs community.

=head2 Discogs::API::StatsData

This object is usually created as part of the L<Discogs::API::Stats>
object.

=item in-collection

An unsigned integer indicating how many people in the Discogs community
have the associated L<Discogs::API::MasterReleaseVersion> in their collection.

=item in-wantlist

An unsigned integer indicating how many people in the Discogs community
have the associated L<Discogs::API::MasterReleaseVersion> in their want list.

=head2 Discogs::API::SubLabel

This object is usually created as part of the L<Discogs::API::Label>
object.

=item id

The ID of this sublabel.

=item name

A string with the name of this sublabel.

=item resource-url

The URL to get the full L<Discogs::API::Label> information of this
C<SubLabel> using the Discogs API.

=head2 Discogs::API::Track

The information about a track on a release, usually created automatically
as part of a L<Discogs::API::Release> object.

=item duration

A string indicating the duration of this track, usually as "mm:ss".

=item position

A string indication the position of this track, "A" side or "B" side.

=item title

A string containing the title of this track.

=item type

A string to indicate the type of track, usually "track".

=head2 Discogs::API::User

This object is usually created as part of other C<Discogs::API> objects.

=item resource-url

The URL to get the full L<Discogs::API::User> information of this
user using the Discogs API.

=item username

The string with which the Discogs user is identified.

=head2 Discogs::API::UserReleaseRating

Provide the rating a user has given a release.

=item rating

An unsigned integerr with the rating by this user for a release.

=item release

An unsigned integer for the release ID.

=item username

A string for the username.

=head2 Discogs::API::Value

An object usually created as part of the L<Discogs::API::FilterFacet>
object.

=item count

An integer indicating an amount.

=item title

A string for the title of this object.

=item value

A string indicating the value of this object.

=head2 Discogs::API::Video

The information about a video, usually created automatically as part
of a L<Discogs::API::Release> object.

=item description

A string containing the description of this C<Video> object.

=item duration

A string indicating the duration of the video, usually as "mm:ss".

=item embed

A Bool indicating whether this video can be embedded.

=item title

A string containing the title (usually "artist - title") of this
C<Video> object.

=item uri

The URL of the video, usually a link to a YouTube video.

=head1 AUTHOR

Elizabeth Mattijsen <liz@raku.rocks>

Source can be located at: https://github.com/lizmat/Discogs-API . Comments
and Pull Requests are welcome.

If you like this module, or what I'm doing more generally, committing to a
L<small sponsorship|https://github.com/sponsors/lizmat/>  would mean a great
deal to me!

=head1 COPYRIGHT AND LICENSE

Copyright 2020, 2021, 2024 Elizabeth Mattijsen

This library is free software; you can redistribute it and/or modify it under
the Artistic License 2.0.

=end pod

# vim: expandtab shiftwidth=4
